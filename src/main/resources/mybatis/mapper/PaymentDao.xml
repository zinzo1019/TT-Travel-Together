<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.choyoujin.dao.PaymentDao">

    <!--    여행 상품 결제건 저장하기-->
    <insert id="savePayment">
        insert into travel_product_payment (imp_uid, travel_product_id,
                                            tb_user_id, merchant_uid, paid_amount, paid_at,
                                            pg_provider, pg_tid, receipt_url, available, create_date)
        values (#{impUid}, #{productId}, #{userId}, #{merchantUid},
                #{paidAmount}, #{paidAt}, #{pgProvider}, #{pgTid}, #{receiptUrl}, true, now())
    </insert>

    <!--    여행 상품 결제 취소하기-->
    <update id="cancelPaymentById">
        update travel_product_payment
        set available = false
        where id = #{id}
    </update>

    <!--    사용자 아이디로 사용자가 결제한 여행 상품 리스트 가져오기-->
    <select id="findAllByUserId" resultType="com.example.choyoujin.dto.PaymentDto">
        select tpp.id                as paymentId,
               tpp.paid_amount,
               pg_provider,
               tpp.travel_product_id as productId,
               tpp.create_date,
               tpp.pg_provider,
               tpp.available,
               tp.name               as productName
        from travel_product_payment tpp
                 left join tb_user tu
                           on tpp.tb_user_id = tu.id
                 left join travel_product tp
                           on tpp.travel_product_id = tp.id
        where tu.id = #{userId}
    </select>

    <update id="updateEnabledByProductId">
        update travel_product_payment
        set available = #{enabled}
        where travel_product_id = #{productId}
    </update>
</mapper>